### STEP 1: Create Users First ###

### Create a patient user
POST http://localhost:3000/users
Content-Type: application/json

{
  "email": "patient@example.com",
  "password": "password123",
  "firstName": "John",
  "lastName": "Patient",
  "role": "patient",
  "isEmailVerified": false
}

### Create a doctor user
POST http://localhost:3000/users
Content-Type: application/json

{
  "email": "doctor@example.com",
  "password": "password123",
  "firstName": "Dr. Jane",
  "lastName": "Smith",
  "role": "doctor",
  "isEmailVerified": true
}

### STEP 2: Create Doctor Profile ###

### Create a doctor (using user ID from above response)
POST http://localhost:3000/doctors
Content-Type: application/json

{
  "userId": 2,
  "specialization": "Cardiology",
  "licenseNumber": "MD123456",
  "yearsOfExperience": 10,
  "phoneNumber": "+15551234567",
  "officeAddress": "123 Medical Center Dr, City, State 12345"
}

### STEP 3: Create Patient Profile ###

### Create a patient (using user ID from step 1, doctor ID from step 2)
POST http://localhost:3000/patients
Content-Type: application/json

{
  "userId": 1,
  "gender": "male",
  "phoneNumber": "+15559876543",
  "assignedDoctorId": 1,
  "address": "123 Main St, City, State 12345",
  "dateOfBirth": "1990-05-15",
  "medicalHistory": "No known allergies."
}

### STEP 4: Create Orders ###

### Create an order (using patient ID from step 3)
POST http://localhost:3000/orders
Content-Type: application/json

{
  "patientId": 1,
  "orderDate": "2025-07-01T10:00:00Z",
  "status": "pending",
  "totalAmount": 150.00,
  "OrderId": "ORD-001"
}

### STEP 5: Test Retrieval with Relationships ###

### Get all users
GET http://localhost:3000/users

### Get all doctors (with user and patient relationships)
GET http://localhost:3000/doctors

### Get all patients (with user, doctor, and order relationships)
GET http://localhost:3000/patients

### Get all orders (with patient relationships)
GET http://localhost:3000/orders

### Get specific patient by ID (with all relationships)
GET http://localhost:3000/patients/1

### Get specific doctor by ID (with all relationships)
GET http://localhost:3000/doctors/1

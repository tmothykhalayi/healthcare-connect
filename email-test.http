### Email Service Test Endpoints

# Base URL
@baseUrl = http://localhost:8000

### IMPORTANT: The 404 errors you're seeing are CORRECT behavior!
### The system is properly rejecting non-existent email addresses.
### Use the valid email addresses below for testing.

### 0. First, create test users (if they don't exist)
POST {{baseUrl}}/users
Content-Type: application/json

{
  "email": "timoth@gmail.com",
  "password": "123",
  "firstName": "Timothy",
  "lastName": "Khalayi",
  "phoneNumber": "+254700000000",
  "role": "admin",
  "isEmailVerified": true
}

###

POST {{baseUrl}}/users
Content-Type: application/json

{
  "email": "esthy.nandwa@example.com",
  "password": "123",
  "firstName": "Esthy",
  "lastName": "Nandwa",
  "phoneNumber": "+254712345679",
  "role": "doctor"
}

###

### 1. Test forgot password with VALID user (should work)
POST {{baseUrl}}/auth/forgot-password
Content-Type: application/json

{
  "email": "manya@gmail.com"
}

### 2. Test login with VALID user (should trigger login notification email)
POST {{baseUrl}}/auth/signin
Content-Type: application/json

{
  "email": "timoth@gmail.com",
  "password": "123"
}

### 3. Test forgot password with another VALID user
POST {{baseUrl}}/auth/forgot-password
Content-Type: application/json

{
  "email": "esthy.nandwa@example.com"
}

### 4. Test login with Esthy (should trigger login notification email)
POST {{baseUrl}}/auth/signin
Content-Type: application/json

{
  "email": "esthy.nandwa@example.com",
  "password": "123"
}

### 5. Test password reset with OTP (use OTP from email)
POST {{baseUrl}}/auth/reset-password
Content-Type: application/json

{
  "email": "timoth@gmail.com",
  "otp": "123456",
  "newPassword": "newSecurePassword123"
}

### 6. Test with INVALID email (should return 404 - this is correct!)
POST {{baseUrl}}/auth/forgot-password
Content-Type: application/json

{
  "email": "nonexistent@example.com"
} 
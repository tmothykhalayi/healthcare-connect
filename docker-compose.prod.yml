services:
  health_system-db:
    image: postgres:15-alpine
    container_name: health_system-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: B3YOND
      POSTGRES_DB: HealthSystem
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - health_system-pgdata-prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8.0-alpine
    container_name: redis-cache-prod
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-your_secure_redis_password}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-your_secure_redis_password}"]
    ports:
      - "6379:6379"
    volumes:
      - redis-cache-data-prod:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-your_secure_redis_password}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  health_system-app-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: health_system-app-prod
    restart: unless-stopped
    ports:
      - "80:9000"          # <-- Corrected to map container 9000 to host 80
    environment:
      - NODE_ENV=development
      - PORT=9000
      - DBHOST=health_system-db
      - DBPORT=5432
      - DBNAME=${DB_NAME:-HealthSystem}
      - DBUSER=${DB_USERNAME:-postgres}
      - DBPASSWORD=${DB_PASSWORD:-B3YOND}
      - DB_SYNC=true
      - DB_LOGGING=true
      - REDIS_URL=redis://:${REDIS_PASSWORD:-your_secure_redis_password}@redis:6379
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET:-your_secure_access_token_secret_here}
      - JWT_ACCESS_TOKEN_EXPIRATION_TIME=${JWT_ACCESS_TOKEN_EXPIRATION:-15m}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET:-your_secure_refresh_token_secret_here}
      - JWT_REFRESH_TOKEN_EXPIRATION_TIME=${JWT_REFRESH_TOKEN_EXPIRATION:-7d}
      - THROTTLE_TTL=${THROTTLE_TTL:-60}
      - THROTTLE_LIMIT=${THROTTLE_LIMIT:-10}
    depends_on:
      redis:
        condition: service_healthy
      health_system-db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  health_system-pgdata-prod:
    name: health_system-pgdata-prod
    driver: local
  redis-cache-data-prod:
    name: redis-cache-data-prod
    driver: local
  app_logs_prod:
    name: health_system-app-logs-prod
    driver: local

networks:
  app-network:
    driver: bridge

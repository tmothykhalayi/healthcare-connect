### Pharmacy Management Endpoints - Complete Collection
### Base URL and Environment Variables
@baseUrl = http://localhost:8000
@userId = 1
@pharmacyUserId = 2
@pharmacyId = 1

### ------------------------------------------
### 1. PHARMACY CREATION & REGISTRATION
### ------------------------------------------

### Create a new pharmacy (basic required fields)
POST {{baseUrl}}/pharmacy
Content-Type: application/json

{
  "userId": 1,
  "pharmacyName": "MediCare Pharmacy",
  "licenseNumber": "PH12345ABC",
  "address": "123 Medical Center Drive, Healthcare City, HC 12345",
  "phoneNumber": "+1-555-PHARMACY"
}

###

### Create pharmacy with all optional fields
POST {{baseUrl}}/pharmacy
Content-Type: application/json

{
  "userId": 2,
  "pharmacyName": "HealthFirst Community Pharmacy",
  "licenseNumber": "PH67890XYZ",
  "address": "456 Main Street, Downtown, DT 67890",
  "phoneNumber": "+1-555-HEALTH",
  "email": "info@healthfirst.com",
  "openingHours": "8:00 AM - 10:00 PM",
  "services": ["Prescription filling", "Vaccination", "Health screening", "Medication counseling"],
  "deliveryAvailable": true,
  "onlineOrderingAvailable": true,
  "insurancePlansAccepted": ["BlueCross", "Aetna", "Medicare", "Medicaid"],
  "status": "active",
  "notes": "Full-service community pharmacy with 24/7 emergency services"
}

###

### Create hospital pharmacy
POST {{baseUrl}}/pharmacy
Content-Type: application/json

{
  "userId": 3,
  "pharmacyName": "City General Hospital Pharmacy",
  "licenseNumber": "PH11111HOS",
  "address": "789 Hospital Drive, Medical District, MD 11111",
  "phoneNumber": "+1-555-HOSPITAL",
  "email": "pharmacy@citygeneral.com",
  "openingHours": "24/7",
  "services": ["Inpatient medications", "IV preparations", "Clinical consultations", "Emergency medications"],
  "deliveryAvailable": false,
  "onlineOrderingAvailable": false,
  "status": "active",
  "notes": "Hospital-based pharmacy serving inpatient and outpatient needs"
}

###

### ------------------------------------------
### 2. PHARMACY RETRIEVAL ENDPOINTS
### ------------------------------------------

### Get all pharmacies
GET {{baseUrl}}/pharmacy

###

### Get all pharmacies with status filter
GET {{baseUrl}}/pharmacy?status=active

###

### Get all pharmacies with city filter
GET {{baseUrl}}/pharmacy?city=Healthcare City

###

### Get all pharmacies with delivery filter
GET {{baseUrl}}/pharmacy?delivery=true

###

### Get pharmacy by ID
GET {{baseUrl}}/pharmacy/{{pharmacyId}}

###

### Get pharmacy by user ID
GET {{baseUrl}}/pharmacy/user/{{userId}}

###

### Get pharmacy by different user ID
GET {{baseUrl}}/pharmacy/user/2

###

### ------------------------------------------
### 3. PHARMACY SEARCH ENDPOINTS
### ------------------------------------------

### Search pharmacies by name
GET {{baseUrl}}/pharmacy/search?name=MediCare

###

### Search pharmacies by partial name
GET {{baseUrl}}/pharmacy/search?name=Health

###

### Search pharmacies by name (case insensitive)
GET {{baseUrl}}/pharmacy/search?name=PHARMACY

###

### ------------------------------------------
### 4. PHARMACY FILTERING ENDPOINTS
### ------------------------------------------

### Get pharmacies with delivery service (available)
GET {{baseUrl}}/pharmacy/delivery?available=true

###

### Get pharmacies without delivery service
GET {{baseUrl}}/pharmacy/delivery?available=false

###

### Get pharmacies by location (city search)
GET {{baseUrl}}/pharmacy/location?city=Healthcare City

###

### Get pharmacies by location (partial address search)
GET {{baseUrl}}/pharmacy/location?city=Downtown

###

### Get pharmacies by location (Medical District)
GET {{baseUrl}}/pharmacy/location?city=Medical District

###

### ------------------------------------------
### 5. PHARMACY UPDATE ENDPOINTS
### ------------------------------------------

### Update pharmacy basic information
PATCH {{baseUrl}}/pharmacy/{{pharmacyId}}
Content-Type: application/json

{
  "pharmacyName": "MediCare Plus Pharmacy",
  "email": "info@medicareplus.com",
  "phoneNumber": "+1-555-MEDICARE"
}

###

### Update pharmacy hours and services
PATCH {{baseUrl}}/pharmacy/{{pharmacyId}}
Content-Type: application/json

{
  "openingHours": "7:00 AM - 11:00 PM",
  "services": ["Prescription filling", "Vaccination", "Health screening", "Medication counseling", "Diabetes management"],
  "deliveryAvailable": true,
  "onlineOrderingAvailable": true
}

###

### Update pharmacy address and contact
PATCH {{baseUrl}}/pharmacy/{{pharmacyId}}
Content-Type: application/json

{
  "address": "123 Medical Center Drive, Suite 101, Healthcare City, HC 12345",
  "phoneNumber": "+1-555-UPDATED",
  "email": "updated@medicareplus.com"
}

###

### Update pharmacy insurance and notes
PATCH {{baseUrl}}/pharmacy/{{pharmacyId}}
Content-Type: application/json

{
  "insurancePlansAccepted": ["BlueCross", "Aetna", "Medicare", "Medicaid", "Cigna", "Humana"],
  "notes": "Updated: Now accepting additional insurance plans and offering extended hours"
}

###

### ------------------------------------------
### 6. PHARMACY STATUS MANAGEMENT
### ------------------------------------------

### Update pharmacy status to active
PATCH {{baseUrl}}/pharmacy/{{pharmacyId}}/status
Content-Type: application/json

{
  "status": "active"
}

###

### Update pharmacy status to inactive
PATCH {{baseUrl}}/pharmacy/{{pharmacyId}}/status
Content-Type: application/json

{
  "status": "inactive"
}

###

### Update pharmacy status to temporarily closed
PATCH {{baseUrl}}/pharmacy/{{pharmacyId}}/status
Content-Type: application/json

{
  "status": "temporarily_closed"
}

###

### Update pharmacy status to pending verification
PATCH {{baseUrl}}/pharmacy/{{pharmacyId}}/status
Content-Type: application/json

{
  "status": "pending_verification"
}

###

### ------------------------------------------
### 7. PHARMACY STATISTICS & ANALYTICS
### ------------------------------------------

### Get pharmacy statistics
GET {{baseUrl}}/pharmacy/{{pharmacyId}}/stats

###

### Get pharmacy statistics for different pharmacy
GET {{baseUrl}}/pharmacy/2/stats

###

### Get pharmacy statistics for hospital pharmacy
GET {{baseUrl}}/pharmacy/3/stats

###

### ------------------------------------------
### 8. PHARMACY DELETION
### ------------------------------------------

### Delete pharmacy (soft delete)
DELETE {{baseUrl}}/pharmacy/{{pharmacyId}}

###

### Delete specific pharmacy by ID
DELETE {{baseUrl}}/pharmacy/2

###

### ------------------------------------------
### 9. ADVANCED SEARCH & FILTERING COMBINATIONS
### ------------------------------------------

### Search active pharmacies by name
GET {{baseUrl}}/pharmacy/search?name=MediCare
# Then filter results by status=active on frontend

###

### Get delivery pharmacies in specific city
GET {{baseUrl}}/pharmacy/delivery?available=true
# Combine with location search

###

### Complex search example (multiple filters)
GET {{baseUrl}}/pharmacy?status=active&city=Healthcare&delivery=true

###

### ------------------------------------------
### 10. TESTING & VALIDATION ENDPOINTS
### ------------------------------------------

### Test pharmacy creation with minimal data
POST {{baseUrl}}/pharmacy
Content-Type: application/json

{
  "userId": 4,
  "pharmacyName": "Test Pharmacy",
  "licenseNumber": "TEST123",
  "address": "Test Address",
  "phoneNumber": "555-TEST"
}

###

### Test pharmacy creation with duplicate license (should fail)
POST {{baseUrl}}/pharmacy
Content-Type: application/json

{
  "userId": 5,
  "pharmacyName": "Duplicate Test Pharmacy",
  "licenseNumber": "PH12345ABC",
  "address": "Different Address",
  "phoneNumber": "555-DUPLICATE"
}

###

### Test pharmacy creation with non-existent user (should fail)
POST {{baseUrl}}/pharmacy
Content-Type: application/json

{
  "userId": 99999,
  "pharmacyName": "Invalid User Pharmacy",
  "licenseNumber": "INVALID123",
  "address": "Invalid Address",
  "phoneNumber": "555-INVALID"
}

###

### Test get non-existent pharmacy (should return 404)
GET {{baseUrl}}/pharmacy/99999

###

### Test search with no results
GET {{baseUrl}}/pharmacy/search?name=NonExistentPharmacy

###

### Test update non-existent pharmacy (should fail)
PATCH {{baseUrl}}/pharmacy/99999
Content-Type: application/json

{
  "pharmacyName": "This should fail"
}

###

### ------------------------------------------
### 11. BULK OPERATIONS (if implemented)
### ------------------------------------------

### Get multiple pharmacies by user IDs
GET {{baseUrl}}/pharmacy/user/1
GET {{baseUrl}}/pharmacy/user/2
GET {{baseUrl}}/pharmacy/user/3

###

### Get all pharmacies and filter by multiple criteria
GET {{baseUrl}}/pharmacy

###

### ------------------------------------------
### 12. VALIDATION TESTING
### ------------------------------------------

### Test invalid pharmacy data (missing required fields)
POST {{baseUrl}}/pharmacy
Content-Type: application/json

{
  "userId": 1
  # Missing required fields - should return validation error
}

###

### Test invalid update data
PATCH {{baseUrl}}/pharmacy/{{pharmacyId}}
Content-Type: application/json

{
  "userId": "invalid_user_id"
  # Invalid data type - should return validation error
}

###